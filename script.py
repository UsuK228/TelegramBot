# –¢–ì –±–æ—Ç –≤–µ—Ä—Å–∏—è 1, –∑–∞–±—Ä–æ—à–µ–Ω–æ –∫ —Ö—É—è–º —Å–æ–±–∞—á–∏–º —Ç.–∫. telebot

import telebot
import requests
import logging
from bs4 import BeautifulSoup
import re

API_TOKEN = "YOUR TOKEN FROM BOTFATHER" # –≤–∞—Å–¥–∏–∫ –∏–¥–∏ –Ω–∞—Ö—É–π

bot = telebot.TeleBot(API_TOKEN)

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
)
logger = logging.getLogger(__name__)

def safe_eval(expression):
    if not re.fullmatch(r'^[\d+-/().\s]+$', expression):
        return "–û—à–∏–±–∫–∞: –¥–æ–ø—É—Å—Ç–∏–º—ã —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã"
    try:
        return eval(expression)
    except Exception as err:
        return f"–û—à–∏–±–∫–∞ : {err}"

def log_command(message):
    logger.info(
        f"Command: {message.text} | "
        f"User: {message.from_user.id} | "
        f"Username: @{message.from_user.username} | "
        f"Chat: {message.chat.id} ({message.chat.type})"
    )

@bot.message_handler(commands=["start"])
def send_welcome(message):
    log_command(message)
    bot.reply_to(message, """
–î–∞—Ä–æ–≤–∞ –∫–µ–Ω—Ç–æ—Ñ–∞—Ä–∏–∫, –Ω–∞–ø–∏—à–∏ /help –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–Ω–µ!
""")

@bot.message_handler(commands=["help"])
def send_help(message):
    log_command(message)
    bot.reply_to(message, """
–Ø -- –º—É–ª—å—Ç–∏–±–æ—Ç, –º–æ–≥—É –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏!
/start -- –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è
/calc [–∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä] -- –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
/echo [—Å–æ–æ–±—â–µ–Ω–∏–µ] -- —ç—Ö–æ
/oreshnik -- —Ä–∞—Å—á–µ—Ç –ø–æ–ª–µ—Ç–∞ —Ä–∞–∫–µ—Ç—ã "–û—Ä–µ—à–Ω–∏–∫" —Å –ø–æ–ª–∏–≥–æ–Ω–∞ "–ö–∞–ø—É—Å—Ç–∏–Ω –Ø—Ä" –¥–æ –ë–µ—Ä–ª–∏–Ω–∞
/status -- —Å—Ç–∞—Ç—É—Å –ª—é–±–∏–º–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
/cubic -- –∫–∏–Ω—É—Ç—å –∫—É–±–∏–∫
""")

@bot.message_handler(commands=["calc"])
def send_calc(message):
    try:
        log_command(message)
        calc_expr = message.text.split(maxsplit=1)[1] #message.text.split(maxsplit=1)[1]
        bot.reply_to(message, safe_eval(calc_expr))
    except Exception as err:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {err}")

@bot.message_handler(commands=["echo"])
def send_echo(message):
    log_command(message)
    try:
        user_text = message.text.split(maxsplit=1)[1]

        if "—É—Å–∏–∫" in user_text.lower() or "usuk" in user_text.lower():
            bot.reply_to(message, "–ó–∞–ø—Ä–µ—â–µ–Ω–æ –ø–∏—Å–∞—Ç—å –∏–º—è –∏–º–ø–µ—Ä–∞—Ç–æ—Ä–∞!")
        else:
            bot.reply_to(message, message.text.split(maxsplit=1)[1])
    except Exception as err:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {err}")

@bot.message_handler(commands=["oreshnik"])
def send_echo(message):
    log_command(message)
    bot.reply_to(message, "11-12 –º–∏–Ω—É—Ç")
    bot.send_message(message.chat.id, "–•–æ—Ö–ª—ã –ø–∏–¥–æ—Ä—ã")

@bot.message_handler(commands=["status"])
def send_status(message):
    log_command(message)
    url = "https://gmod-servers.com/server/262471/"

    response = requests.get(url)

    bs = BeautifulSoup(response.text, "lxml")
    players_info = bs.find("tbody")
    serverinfo = players_info.text
    data = serverinfo.split()

    status = data[6]
    count = data[12]
    mapname = data[22]
    checked = data[8]

    if count == "Online":
        count = 0
    if mapname == "Version":
        mapname = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    bot.send_message(message.chat.id, f"""
üîåIP —Å–µ—Ä–≤–µ—Ä–∞: 95.154.68.79:27015
üü¢–°—Ç–∞—Ç—É—Å: {status}
üéÆ–û–Ω–ª–∞–π–Ω: {count}/32
üó∫Ô∏è–ö–∞—Ä—Ç–∞: {mapname}
üßê–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {checked} –º–∏–Ω –Ω–∞–∑–∞–¥
""")

@bot.message_handler(commands=["cubic"])
def send_cubic(message):
    log_command(message)
    bot.send_dice(message.chat.id, "üé≤")

@bot.message_handler(func=lambda message: True)
def log_text_messages(message):
    logger.info(f"Message: {message.text} | User: {message.from_user.id}")

if __name__ == "__main__":
    bot.infinity_polling()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")